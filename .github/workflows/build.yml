name: Build and Release Tauri App

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-22.04]
    steps:
      # ... Other steps

      - name: Build Tauri App
        run: npx tauri build

      # Upload artifacts with platform-specific names
      - name: Upload Artifact for macOS
        if: runner.os == 'macos-latest'
        uses: actions/upload-artifact@v3
        with:
          name: tauri-app-macos
          path: src-tauri/target/release/bundle/macos/**

      - name: Upload Artifact for Windows
        if: runner.os == 'windows-latest'
        uses: actions/upload-artifact@v3
        with:
          name: tauri-app-windows
          path: src-tauri/target/release/bundle/windows/**

      - name: Upload Artifact for Linux
        if: runner.os == 'ubuntu-22.04'
        uses: actions/upload-artifact@v3
        with:
          name: tauri-app-linux
          path: src-tauri/target/release/bundle/linux/**

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      # Checkout code and fetch tags
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Fetch All Tags
        run: git fetch --tags

      - name: Verify Created Tag
        run: |
          echo "Verifying tag ${{ needs.create-tag.outputs.tag_name }}"
          if ! git tag -l | grep -q "${{ needs.create-tag.outputs.tag_name }}"; then
            echo "Error: Tag ${{ needs.create-tag.outputs.tag_name }} not found locally."
            exit 1
          fi

      # Download platform-specific artifacts
      - name: Download macOS Artifact
        uses: actions/download-artifact@v3
        with:
          name: tauri-app-macos

      - name: Download Windows Artifact
        uses: actions/download-artifact@v3
        with:
          name: tauri-app-windows

      - name: Download Linux Artifact
        uses: actions/download-artifact@v3
        with:
          name: tauri-app-linux

      # Create Release
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: tauri-app-macos/**/*, tauri-app-windows/**/*, tauri-app-linux/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
