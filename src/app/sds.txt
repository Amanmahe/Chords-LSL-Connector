    <div className="h-screen flex flex-col bg-gray-200 rounded-2xl overflow-hidden">
      {/* Top Bar */}
      <div className="w-full">
        <div
          className="flex justify-between items-center w-full h-12 px-4 bg-gray-800 text-white select-none"
          data-tauri-drag-region
        >
          {/* Left Buttons */}
          <div className="flex space-x-3">
            <button
              onClick={() => {
                setActiveButton("serial");
              }}
              className="hover:text-blue-400"
              title="Serial"
            >
              <Link size={20} />
            </button>

            <button
              onClick={() => {
                setActiveButton("bluetooth");
              }}
              className="hover:text-blue-400"
              title="Bluetooth"
            >
              <Bluetooth size={20} />
            </button>

            <button
              onClick={() => {
                setActiveButton("wifi");
              }}
              className="hover:text-blue-400"
              title="WiFi"
            >
              <Wifi size={20} />
            </button>
          </div>


          {/* Right Buttons */}
          <div className="flex space-x-3">
            <button onClick={toggleAlwaysOnTop} className={`${alwaysOnTop ? "text-green-400" : "text-white"} hover:text-green-300`} title="Toggle Always on Top">
              <ChevronsUp size={20} />
            </button>
            <button onClick={minimizeWindow} className="hover:text-yellow-400" title="Minimize">
              <Minus size={20} />
            </button>
            <button onClick={closeWindow} className="hover:text-red-400" title="Close">
              <X size={20} />
            </button>
          </div>
        </div>
      </div>

      {/* Main Content Area */}
      <div className="flex  w-full  ">
        {/* Left Side - Icon and Bluetooth Devices */}
        <div className="flex-1 flex flex-col items-center">
          <div className="w-full h-18 py-2 flex flex-col items-center justify-center"> {/* Added justify-center here */}
            {/* Icon Container */}
            {(!scane) && (
              <div className="flex items-center justify-center w-52 h-[60vh] bg-gray-200 shadow-[8px_8px_16px_#bebebe,-8px_-8px_16px_#ffffff] animate-[rotateShadow_1.5s_linear_infinite]">
                {activeButton ? (
                  {
                    serial: (
                      <Link
                        size={50}
                        className={`transition-colors duration-300 ${deviceConnected && activeButton === "serial"
                          ? "text-green-500"
                          : "text-gray-500"
                          }`}
                        onClick={ConnectserialDevice}
                      />
                    ),
                    bluetooth: (
                      <Bluetooth
                        size={50}
                        className={`transition-colors duration-300 ${deviceConnected && activeButton === "bluetooth"
                          ? "text-green-500"
                          : "text-gray-500"
                          }`}
                        onClick={ConnectbluetoothDevice}
                      />
                    ),
                    wifi: (
                      <Wifi
                        size={50}
                        className={`transition-colors duration-300 ${deviceConnected && activeButton === "wifi"
                          ? "text-green-500"
                          : "text-gray-500"
                          }`}
                        onClick={ConnectwifiDevice}
                      />
                    ),
                  }[activeButton]
                ) : (
                  <div className="text-gray-400 text-sm text-center">
                    <p>Select a</p>
                    <p>connection</p>
                  </div>
                )}
              </div>
            )}


            {/* Bluetooth Devices List (shown only when scanning) */}
            {scane && !deviceConnected && (
              <div className="w-52 max-w-md  bg-white rounded-lg shadow-lg p-4 overflow-y-auto max-h-[60vh]">
                <h3 className="text-lg font-semibold mb-3 text-center">Available Devices</h3>
                {devices.length > 0 ? (
                  <ul className="space-y-2">
                    {devices.map((device) => (
                      <li key={device.id} className="flex items-center p-2 hover:bg-gray-100 rounded">
                        <input
                          type="radio"
                          id={`device-${device.id}`}
                          name="bluetooth-device"
                          value={device.id}
                          checked={selectedDevice === device.id}
                          onChange={() => setSelectedDevice(device.id)}
                          className="mr-3"
                        />
                        <label htmlFor={`device-${device.id}`} className="flex-1 text-gray-700 cursor-pointer">
                          {device.name || `Unknown Device (${device.id})`}
                        </label>
                      </li>
                    ))}
                  </ul>
                ) : (
                  <p className="text-gray-500 py-4 text-center">Scanning for devices...</p>
                )}
                <div className="flex justify-center space-x-4 mt-6">
                  <button
                    onClick={connectbleToDevice}
                    disabled={!selectedDevice}
                    className={`px-2 py-2 rounded-md ${!selectedDevice
                      ? 'bg-gray-300 cursor-not-allowed'
                      : 'bg-blue-500 hover:bg-blue-600 text-white'
                      } transition-colors`}
                  >
                    Connect
                  </button>
                  <button
                    onClick={() => {
                      setActiveButton(null);
                      setScane(false); // or setScan(false), if it's a typo
                    }}
                    className="px-2 py-2 rounded-md bg-gray-200 hover:bg-gray-300 text-gray-700 transition-colors"
                  >
                    Cancel
                  </button>
                </div>
              </div>
            )}
          </div>


        </div>

        {/* Right Side - Info Cards */}
        <div className="flex-1 flex mt-2 flex-col justify-center items-center h-[60vh]  ">
          <div className="bg-white rounded shadow p-2 ">
            <p className='text-black '>
              <span className="text-lg  font-semibold">Status: </span>{status || "No status yet"}
            </p>
            <p className='text-black '>
              <span className="text-lg  font-semibold">Sample Rate: </span>500
            </p>
            <p className='text-black '>
              <span className="text-lg  font-semibold">Sample Lost: </span>0
            </p>
            <p className='text-black '>
              <span className="text-lg  font-semibold">LSL: </span>{status || "No status yet"}
            </p>
          </div>


        </div>  </div>
    </div>